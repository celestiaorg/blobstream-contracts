type DeployedERC20 @entity {
  id: ID!
  cosmosDenom: String!
  tokenContract: Bytes!
  name: String!
  symbol: String!
  decimals: Int!
}

type Deposit @entity {
  id: ID!
  tokenContract: Bytes!
  sender: Bytes!
  destination: String!
  amount: BigInt!
  timestamp: Int!
  blockHeight: Int!
}

type BatchWithdrawal @entity {
  id: ID!
  amounts: [BigInt!]!
  destinations: [String!]!
  fees: [BigInt!]!
  totalFee: BigInt!
  sender: Bytes!
  batchNonce: BigInt!
  tokenContract: Bytes!
  timestamp: Int!
  blockHeight: Int!
}

type Withdrawal @entity {
  id: ID!
  amount: BigInt!
  destination: String!
  fee: BigInt!
  tokenContract: Bytes!
  timestamp: Int!
  blockHeight: Int!
}

type Valset @entity {
  id: ID!
  validators: [Bytes!]!
  powers: [BigInt!]!
  valsetNonce: BigInt!
  rewardAmount: BigInt!
  rewardToken: Bytes!
  timestamp: Int!
  blockHeight: Int!
}

type State @entity {
  id: ID!
  peggyId: Bytes!
  lastEventNonce: Int!
  lastValsetNonce: Int!
  # lastValsetCheckpoint: Bytes!
}

type StateLastBatchNonces @entity {
  id: ID!
  nonce: Int!
}
